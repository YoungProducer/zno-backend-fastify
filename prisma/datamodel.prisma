type User {
  id: ID! @id
  email: String! @unique
  password: String!
  name: String
  lastName: String
  emailConfirmed: Boolean @default(value: false)
  role: Role!
  refreshTokens: [Token!]!
}

type Token {
  id: ID! @id
  token: String! @unique
  loginId: String! @unique
  user: User! @relation(link: INLINE)
}

enum Role {
  ADMIN,
  DEFAULT_USER,
}

type Subject {
  id: ID! @id
  name: String! @unique
  isSubSubject: Boolean! @default(value: false)
  parent: Subject @relation(link: INLINE)
  image: String
  icon: String
  config: SubjectConfig
}

type SubjectConfig {
  id: ID! @id
  subject: Subject! @relation(link: INLINE)
  themes: [String!]
  subSubjects: [SubSubject!]
  exams: Exams
}

type SubSubject @embedded {
  subject: Subject! @relation(link: INLINE)
  themes: [String]
}

type Exams @embedded {
  trainings: [String]
  sessions: [String]
}

type TestSuite {
  id: ID! @id
  subject: Subject! @relation(name: "MainSubjectRelation", link: INLINE)
  subSubject: Subject @relation(name: "SubSubjectRelation", link: INLINE)
  theme: String
  session: String
  training: String
  answers: [Answer!]
  images: [TestSuiteImage!]! @relation(name: "TestSuiteImagesRelation", link: INLINE)
  path: String!
}

enum ImageType {
  TASK,
  EXPLANATION,
}

type TestSuiteImage {
  id: ID! @id
  taskId: Int!
  testSuite: TestSuite! @relation(name: "TestSuiteImagesRelation")
  image: String! @unique
  type: ImageType!
}

enum AnswerType {
  SINGLE,
  RELATIONS,
  TEXT,
}

type Answer @embedded {
  taskId: Int!
  answer: [String!]
  type: AnswerType!
}



